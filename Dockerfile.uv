# syntax=docker/dockerfile:1
FROM python:3.12-slim

ENV PIP_DISABLE_PIP_VERSION_CHECK=1 \
	PYTHONDONTWRITEBYTECODE=1 \
	PYTHONUNBUFFERED=1 \
	UV_LINK_MODE=copy

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
	curl ca-certificates pkg-config build-essential libssl-dev && \
	rm -rf /var/lib/apt/lists/*

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh -s -- --yes && \
	ln -s /root/.local/bin/uv /usr/local/bin/uv

# Only copy project metadata first for better layer caching
COPY pyproject.toml ./
COPY README.md ./
# If you have a lockfile, copy it too to enable frozen resolves
# COPY uv.lock ./

# Create the environment and install deps
RUN uv sync --no-dev

# Now copy the application code
COPY app ./app

# Create data directory for sqlite
RUN mkdir -p /data
VOLUME ["/data"]

ENV FLASK_APP=app/wsgi.py \
	SQLITE_PATH=/data/papers.db \
	SCHEDULER_CRON="*/30 * * * *" \
	MAX_ITEMS_PER_RUN=30 \
	PYTHONPATH=/app \
	START_SCHEDULER=1

EXPOSE 8000
CMD ["uv", "run", "--", "gunicorn", "-w", "2", "-b", "0.0.0.0:8000", "app.wsgi:app"]
